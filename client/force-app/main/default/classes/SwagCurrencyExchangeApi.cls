/*
 * currencyapi
 * The currency APIs help you retrieve exchange rates and convert prices between currencies easily.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

public class SwagCurrencyExchangeApi {
    SwagClient client;

    public SwagCurrencyExchangeApi(SwagClient client) {
        this.client = client;
    }

    public SwagCurrencyExchangeApi() {
        this.client = new SwagClient();
    }

    public SwagClient getClient() {
        return this.client;
    }

    /**
     * Converts a price from the source currency into the destination currency
     * Automatically converts the price in the source currency into the destination currency using the latest available currency exchange rate data.
     * @param source Source currency three-digit code (ISO 4217), e.g. USD, EUR, etc. (required)
     * @param destination Destination currency three-digit code (ISO 4217), e.g. USD, EUR, etc. (required)
     * @param sourcePrice Input price, such as 19.99 in source currency (required)
     * @return SwagConvertedCurrencyResult
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagConvertedCurrencyResult currencyExchangeConvertCurrency(Map<String, Object> params) {
        client.assertNotNull(params.get('source'), 'source');
        client.assertNotNull(params.get('destination'), 'destination');
        client.assertNotNull(params.get('sourcePrice'), 'sourcePrice');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagConvertedCurrencyResult) client.invoke(
            'POST', '/currency/exchange-rates/convert/{source}/to/{destination}',
            (Double) params.get('sourcePrice'),
            query, form,
            new Map<String, Object>{
                'source' => (String) params.get('source'),
                'destination' => (String) params.get('destination')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagConvertedCurrencyResult.class
        );
    }
    /**
     * Get a list of available currencies and corresponding countries
     * Enumerates available currencies and the countries that correspond to these currencies.
     * @return SwagAvailableCurrencyResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagAvailableCurrencyResponse currencyExchangeGetAvailableCurrencies() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagAvailableCurrencyResponse) client.invoke(
            'POST', '/currency/exchange-rates/list-available', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagAvailableCurrencyResponse.class
        );
    }
    /**
     * Gets the exchange rate from the source currency into the destination currency
     * Automatically gets the exchange rate from the source currency into the destination currency using the latest available currency exchange rate data.
     * @param source Source currency three-digit code (ISO 4217), e.g. USD, EUR, etc. (required)
     * @param destination Destination currency three-digit code (ISO 4217), e.g. USD, EUR, etc. (required)
     * @return SwagExchangeRateResult
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagExchangeRateResult currencyExchangeGetExchangeRate(Map<String, Object> params) {
        client.assertNotNull(params.get('source'), 'source');
        client.assertNotNull(params.get('destination'), 'destination');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagExchangeRateResult) client.invoke(
            'POST', '/currency/exchange-rates/get/{source}/to/{destination}', '',
            query, form,
            new Map<String, Object>{
                'source' => (String) params.get('source'),
                'destination' => (String) params.get('destination')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagExchangeRateResult.class
        );
    }
}
